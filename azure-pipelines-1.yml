trigger:
- master

pool:
  name: default

stages:
  - stage: VersionBump
    pool:
      name: default
      demands: Web
    displayName: Version Bump
    jobs:
      - job: VersionBumpJob
        displayName: VersionBump
        steps:
          - checkout: self
            persistCredentials: true

          - task: CmdLine@2
            displayName: "Pull Latest Changes"
            inputs:
              script: |
                git config --global user.email "buildAgent@gsd-software.com"
                git config --global user.name "Build Agent"
                git pull origin $(Build.SourceBranchName)
          
          - powershell: |
              $buildName = & "C:\Users\buildagent\AppData\Local\Pub\Cache\bin\cider" bump patch
              Write-Host "Output from cider command: $buildName"
              Write-Host "##vso[build.updatebuildnumber]$buildName"
            displayName: 'Bump Version and Set Build Name'
            condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

          - task: CmdLine@2
            displayName: 'Set Git Config and Push Version Change'
            condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
            inputs:
              script: |
                git commit -a -m "Version patch [skip ci]"
                git tag -a $(Build.BuildNumber) -m "Version $(Build.BuildNumber)"
                git config --global user.email "buildAgent@gsd-software.com"
                git config --global user.name "Build Agent"
                git push origin HEAD:$(Build.SourceBranchName) --tags
                git push --set-upstream origin HEAD:$(Build.SourceBranchName)

  - stage: PublishPackage
    pool:
      name: default
      demands: Pub
    displayName: Publish to pub.dev
    dependsOn: VersionBump
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    jobs:
      - job: PublishJob
        displayName: Publish Package
        steps:
          - checkout: self

          - task: CmdLine@2
            displayName: "Publish to pub.dev"
            inputs:
              script: |
                flutter pub publish --force

  - stage: SyncGitHub
    pool:
      name: default
      demands: Web
    displayName: Sync to GitHub
    dependsOn: PublishPackage
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    jobs:
      - job: SyncJob
        displayName: Sync to GitHub
        steps:
          - checkout: self
            persistCredentials: true

          - task: CmdLine@2
            displayName: "Setup Git for GitHub"
            inputs:
              script: |
                git config --global user.email "buildAgent@gsd-software.com"
                git config --global user.name "Build Agent"
                git remote add github https://$(GITHUB_TOKEN)@github.com/GSD-Software-mbH/GSD-Encryption.git 2>nul || echo "Remote already exists"

          - task: CmdLine@2
            displayName: "Push to GitHub"
            inputs:
              script: |
                git fetch origin
                git push github HEAD:main --tags --force